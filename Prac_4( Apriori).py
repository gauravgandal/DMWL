# -*- coding: utf-8 -*-
"""Prac_4( Apriori).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SMs8iehJM694QLZrunM9l4xZHNwYn1BU

<a href="https://colab.research.google.com/github/GauriRB/DMW_Practical/blob/main/Apriori.ipynb" target="_parent"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/></a>
"""

import numpy as pi
import matplotlib.pyplot as plt
import pandas as pd
from mlxtend.frequent_patterns import apriori, association_rules

data=pd.read_csv("CanteenDataSet.csv")

data

data.shape

data.shape
data.columns=['Dishes']

from mlxtend.preprocessing import TransactionEncoder 
# We can transform data into the right format via the TransactionEncoder

# Via the fit method, the TransactionEncoder learns the unique labels in the dataset,
# and via the transform method, it transforms the input dataset 
#(a Python list of lists) into a one-hot encoded NumPy boolean array
transactions=[]
items=data['Dishes'].values
print(items)

for i in range (0,len(items)):
    transactions.append(items[i].split(","))
    
print(transactions)

encoder=TransactionEncoder()
tran=encoder.fit(transactions).transform(transactions)
print(tran)

encodedData=pd.DataFrame(data = tran, columns = encoder.columns_, dtype = int)
print(encodedData)

encodedData.head(4)

support=apriori(encodedData,min_support=0.2,use_colnames=True)
support.sort_values(by = 'support', ascending = False)
confidence = association_rules(support, metric = 'confidence', min_threshold = 0.3)
confidence.sort_values(by = 'confidence', ascending = False)

