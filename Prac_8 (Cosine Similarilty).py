# -*- coding: utf-8 -*-
"""Distance Measure.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PwEeZ7fX8SOhokbU6ccpkC8Uv74lumlr
"""

n = int(input('Enter the numbers in the vector :'))

#creating vectors
vect1 = []
vect2 = []

print('Enter the elements of the first vector')
for i in range(n):
    inp = int(input())
    vect1.append(inp)
    
print('Enter the elements of the first vector')
for i in range(n):
    inp1 = int(input())
    vect2.append(inp1)

from math import*

def euclidean_dist(x,y):
    return sqrt(sum(pow(a-b, 2) for a,b in zip(x,y)))

def manhatten_dist(x,y):
    return sum(abs(a-b) for a, b in zip(x,y))

from decimal import Decimal

def nth_value(value , n_root):
    root_value = 1/float(n_root)
    return round(Decimal(value)**Decimal(root_value) , 3)

def minkowski_dist(x,y,p_value):
    return nth_value(sum(pow(abs(a-b),p_value) for a,b in zip(x,y)), p_value)

print('Euclidean Distance', euclidean_dist(vect1,vect2))

print('manhattan Distance', manhatten_dist(vect1,vect2))

print('minkowski Distance', minkowski_dist(vect1,vect2,3))

import numpy as np
from sklearn.metrics.pairwise import cosine_similarity

n = int(input('Enter the numbers in the vector :'))

#creating vectors
vect1 = []
vect2 = []

print('Enter the elements of the first vector')
for i in range(n):
    inp = int(input())
    vect1.append(inp)
    
print('Enter the elements of the first vector')
for i in range(n):
    inp1 = int(input())
    vect2.append(inp1)

print("A:", vect1)
print("B:", vect2)

from numpy.linalg import norm

cosine = np.dot(vect1,vect2)/ (norm(vect1)*norm(vect2))
print("Cosine Similarity :", cosine)

