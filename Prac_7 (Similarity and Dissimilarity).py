# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kZ3ymn9Rc6_TRYBVtaZnHXqyG_49ekfu
"""

from math import*
 
def manhattan_distance(x,y):
 
    return sum(abs(a-b) for a,b in zip(x,y))

#euclidean distance 
from math import*
 
def euclidean_distance(x,y):
 
    return sqrt(sum(pow(a-b,2) for a, b in zip(x, y)))

print(euclidean_distance([0,3,4,5],[7,6,3,-1]))

print(manhattan_distance([10,20,10],[10,20,20]))

from math import*
from decimal import Decimal
 
def nth_root(value, n_root):
 
    root_value = 1/float(n_root)
    return round (Decimal(value) ** Decimal(root_value),3)
 
def minkowski_distance(x,y,p_value):
 
    return nth_root(sum(pow(abs(a-b),p_value) for a,b in zip(x, y)),p_value)

print (minkowski_distance([0,3,4,5],[7,6,3,-1],3))

from math import*
 
def square_rooted(x):
 
    return round(sqrt(sum([a*a for a in x])),3)
 
def cosine_similarity(x,y):
    numerator = sum(a*b for a,b in zip(x,y))
    denominator = square_rooted(x)*square_rooted(y)
    return round(numerator/float(denominator),3)

print(cosine_similarity([3, 45, 7, 2], [2, 54, 13, 15]))

