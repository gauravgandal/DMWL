# -*- coding: utf-8 -*-
"""Naive Bayes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xp3sNRbuUIFXZrrNzl9YUwKW0WpA5YYZ
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import sklearn as sk
import seaborn as sbn

d=pd.read_csv('seeds.csv')

d.head()

d.isnull().sum()

d.columns=['Area', 'Perimeter', 'Compactness', 'Kernel_Length','Kernel_Width', 'Asymmetry_Coeff','Kernel_Groove' , 'Category']

d.head()

#Data Transformation
d["Category"].replace({1 :"Kama" , 2 :"Rosa" , 3 :"Canadian"} , inplace = True)
d.head()

x = d.iloc[:, 0:7]
x.head()

y=d['Category']

y.head()

from sklearn.model_selection import train_test_split

x_train , x_test , y_train , y_test = train_test_split(x, y, random_state=50, test_size = 0.25)

from sklearn.naive_bayes import GaussianNB

#Create a Gaussian Classifier
model = GaussianNB()

# Train the model using traning sets
model.fit(x_train, y_train)

# Predict the response for test datasets
Y_pred = model.predict(x_test)

import sklearn.metrics as metrics

print("accuracy:", metrics.accuracy_score (y_test, Y_pred)*100)

data=[[14.26,14.84,0.9710,4.763,3.212,3.221,4.220]]
model.predict(data)

test_pred = model.predict(x_test)

print(metrics.classification_report(y_test, test_pred))
print(metrics.confusion_matrix(y_test, test_pred))

